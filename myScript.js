/* !Date: 19.12.2017 Copyright ©2017-2018 JavaScript Code by Cătălin Anghel-Ursu @Madness2aMaze (https://codepen.io/Madness2aMaze)
- All Rights Reserved!

MIT License

Copyright (c) 2017-2018 Cătălin Anghel-Ursu (https://github.com/Madness2aMaze/Simon-Game-App)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. */

$(document).ready(function() {
  var uiPlayBox = $(".play-box"),
      uiCenter = $(".s-circle"),
      uiDisplay = $(".display"),
      uiOuter = $(".l-circle"),
      uiSwitch = $(".switch"),
      uiStrict = $(".strict"),
      uiFooter = $(".footer"),
      uiStart = $(".start"),
      uiLevel = $(".level"),
      uiGreen = $(".green"),
      uiYlow = $(".yellow"),
      index = [0, 1, 2, 3],
      uiOnOff = $(".knob"),
      uiPlay = $(".play"),
      uiBlue = $(".blue"),
      uiRed = $(".red"),
      uiPad = $(".pad"),
      userCollector = [], //the array containing the user selected pads
      aiCollector = [], //the array containing the generated random pads
      active = false, //the state of the game turn
      strict = false, //boolean var used on the strict/not strict switch
      lastSequence, //last recent generated sequence
      aiPick = 0, //var containing the last generated random number
      userPick = 0, //var containing the number generated by the user selected pads
      pads = { //object containing key-value pairs with the id of the pads
        "0": "#0",
        "1": "#1",
        "2": "#2",
        "3": "#3"
      },
      on = false, //boolean var used for the on/off switch
      level = 0; //the level for the progress of the game

  uiPlay.addClass("color-me"); //adds a 4 color animation on the play button
  uiPlayBox.addClass("color-border"); //adds a 4 color animation on the play-box border

  //opens the game UI wich in turn starts a couple of timed animations
  uiPlay.click(function() {
    uiPlayBox.css("transform", "scale(1.2, 1.2)");
    uiPlayBox.css("opacity", ".5");
    uiPlay.css("transform", "scale(1.2, 1.2)");
    uiPlay.css("opacity", ".5");

    setTimeout(function() {
      uiPlayBox.css("display", "none");
      uiOuter.css("display", "block");
    }, 100);

    setTimeout(function() {
      uiGreen.addClass("visible");
    }, 500);
    setTimeout(function() {
      uiRed.addClass("visible");
    }, 600);
    setTimeout(function() {
      uiYlow.addClass("visible");
    }, 700);
    setTimeout(function() {
      uiBlue.addClass("visible");
    }, 800);
    setTimeout(function() {
      uiCenter.addClass("zoom-in");
      uiCenter.removeClass("invisible");
      uiOuter.removeClass("invisible");
      uiFooter.css("display", "block");
      uiFooter.addClass("visible");
    }, 1000);
  });

  //function for checking if the strict mode is on or off
  uiStrict.click(function isStrict() {
    if (on) {
      if (strict) {
        uiStrict.addClass("str-on");
        strict = false;
      } else {
        uiStrict.removeClass("str-on");
        strict = true;
      }
    }
  });

  //resets the game
  function reset() {    
    level = 0;
    on = false;
    strict = false;
    aiCollector = [];
    userCollector = [];
    uiLevel.html("00");
    uiOnOff.addClass("slide-l");
    uiOnOff.removeClass("slide-r");
    uiLevel.removeClass("zoom-in");
    uiStrict.removeClass("str-on");
    uiPad.css("cursor", "default");
    uiDisplay.addClass("invisible");
    uiStart.css("cursor", "default");
    uiStrict.css("cursor", "default");
    uiOuter.css("box-shadow", "none");
    uiSwitch.css("background", "#f44242");
  }
  
  //switching the game ON
  function toggleOffToOn() {
    
    on = true;
    //active = true;
    strict = true;
    uiLevel.text();
    aiCollector = [];
    userCollector = [];
    uiLevel.addClass("zoom-in");
    uiOnOff.addClass("slide-r");
    uiOnOff.removeClass("slide-l");
    setTimeout(function() {
      uiLevel.removeClass("zoom-in");
    }, 1000);
    uiDisplay.removeClass("invisible");
    uiSwitch.css("background", "#91e842");
    if (on) {
      uiStart.css("cursor", "pointer");
      uiStrict.css("cursor", "pointer");
    }
    $(this).one("click", toggleOnToOff);
  }

  function toggleOnToOff() {
    //switching the game OFF
    reset();
    $(this).one("click", toggleOffToOn);
  }
  uiSwitch.one("click", toggleOffToOn);

  // the randomizer function that generates random numbers from a range
  function randomizer(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  // function that blinks the displayed level
  function lvlBlinker() {
    setTimeout(function() {
      uiLevel.addClass("blink");
    }, 500);
    setTimeout(function() {
      uiLevel.removeClass("blink");
    }, 1800);
  }

  function startGame() {
    if (on) {
      level++;
      level = level < 10 ? "0" + level : level; // if less than 10 to add a "0" in front of the number
      lvlBlinker(); //calls the level blinking function
      userCollector = []; //clears the userCollector array to be ready for the new level
      aiCollector.push(randomizer(0, 3)); //pushes a random number to the aiCollector arr
      //var lastAiChar = aiCollector[aiCollector.length - 1];
      var tempStr = aiCollector.toString(),
          tempArr = tempStr.split(",");
      aiPick = tempArr.reduce((x, y) => x.concat(y)); //converts the all the separate values into a code sequence
      console.log(aiCollector);
      console.log(aiPick);
      //console.log(tempArr);

      // a loop that controls the way the colored pads are highlighted during the random sequence
      $.each(aiCollector, function(indx, val) {
        setTimeout(function() {
          var id = aiCollector[indx],
              uiPads = $(pads[id]);
          //console.log(id);
          uiOuter.css("box-shadow", "none");
          //flasher(padId);
          /*setInterval(function() {
            uiPads.removeClass("selected")
          }, 100);*/
          //flasher(uiPads, 1, 300, id);
          uiPads
            .delay(500 * indx)
            .queue(function() {
            $(this).addClass("selected");
            setInterval(function() {
              uiPads.removeClass("selected");
            }, 350);
            $(this).dequeue();
          });
          /*setTimeout(function() {
            uiLevel.html("XX");
            lvlBlinker();
          }, 3500);*/
          uiLevel.html(level);
          active = true;
          uiPad.css("cursor", "pointer");
        }, 2000);
      });
    }
  }

  // looping through pads based on id
  $.each(index, function(i) {
    var uiPads = $(pads[i]);
    uiPads.mousedown(function() {
      if (on) {
        if (active) {
          uiPads.css({
              opacity: ".1",
              transition: ".3s",
              transform: "scale(.98, .98)"
            });
          uiOuter.css("box-shadow", "inset 0px 0px 75px 10px rgba(0, 0, 0, 1)");
          userCollector.push(uiPads.html());          
          //var lastUserChar = userCollector[userCollector.length - 1];
          userPick = userCollector.reduce((x, y) => x.concat(y));
          console.log(userCollector);
          console.log(userPick);
          //console.log(aiPick);
          if (aiPick === userPick) {
            startGame();
          } /*else {
          uiLevel.html("XX");
          lvlBlinker();
          lastSequence;
        }*/
        }
      }
    });
    uiPads.mouseup(function() {
      uiPads.css({
        opacity: "1",
        transition: ".3s",
        transform: "scale(1, 1)"
      });
    });
  });

  uiStart.click(function() {
    startGame();
  });  
});
